# Unique name for this workflow
name: "[PR] Validate Metadata"

# Definition when the workflow should run
on:
  pull_request:
    branches:
      - "*"

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      # Install SFDX
      - name: Install SFDX
        uses: sfdx-actions/setup-sfdx@v1

      # Checkout the code in the pull request
      - name: "Checkout source code"
        uses: actions/checkout@v2

      # Store secret for dev hub
      - name: "Populate auth file with PROD_SFDX_URL secret"
        shell: bash
        run: "echo ${{ secrets.PROD_SFDX_URL}} > ./PROD_SFDX_URL.txt"

      # Authenticate dev hub
      - name: "Authenticate Dev Hub"
        run: "sfdx force:auth:sfdxurl:store -f ./PROD_SFDX_URL.txt -a devhub -d"

      # Remove auth files
      - name: "Remove auth files"
        if: always()
        run: "rm -f ./PROD_SFDX_URL.txt"

      # Delete unpackagable
      - name: "Delete unpackagable"
        run: rm -rf unpackagable

      # Create scratch org
      - name: "Create scratch org"
        run: sfdx force:org:create -f config/project-scratch-def.json -a scratch-org -s -d 1

      # Install sfpowerkit plugin used to install multiple packages only by version number
      - name: "Install sfpowerkit plugin"
        run: "echo y | sfdx plugins:install sfpowerkit"

      # Get package keys
      - name: "Get package keys"
        id: install-keys
        run: |
          keys=""
          for p in $(jq '.result | .[].Name' -r <<< "$(sfdx force:package:list --json)"); do
              keys+=$p":${{ secrets.PACKAGE_KEY }} "
          done

          echo "::set-output name=keys::$(echo $keys)"

      # Install packages this repo is dependant on
      - name: "Install dependant packages"
        run: "sfdx sfpowerkit:package:dependencies:install -u scratch-org -r -a -w 60 -k '${{ steps.install-keys.outputs.keys }}'"

      # Deploy source to scratch org
      - name: "Push source to scratch org"
        run: "sfdx force:source:push"

      # Sleep for 1 minute while permset groups are updating
      - name: Sleep for 1 minute while permset groups are updating
        uses: jakejarvis/wait-action@master
        with:
          time: "1m"

      # Run Apex tests in scratch org
      - name: "Run Apex tests"
        # run: "sfdx force:apex:test:run -l RunLocalTests -c -r human -d ./tests/apex -w 30"
        run: sfdx force:source:deploy -m ApexClass --testlevel=RunLocalTests --checkonly

      # Delete scratch orgs
      - name: "Delete scratch org"
        if: always()
        run: "sfdx force:org:delete -p -u scratch-org"
