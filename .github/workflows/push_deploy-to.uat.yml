name: "[PUSH] Deploy to UAT"
on:
  workflow_dispatch:
  push:
    branches:
      - uat
    paths:
      - "force-app/**"
jobs:
  deploy-metadata:
    name: Create new package
    runs-on: ubuntu-latest
    steps:
      # Checkout source code
      - name: Checkout source code
        uses: actions/checkout@v2

      # Install SFDX
      - name: Install SFDX
        uses: sfdx-actions/setup-sfdx@v1

      # Authenticate prod
      - name: Authenticate prod
        run: |
          echo ${{ secrets.PROD_SFDX_URL}} > ./PROD_SFDX_URL.txt
          sfdx auth:sfdxurl:store -f ./PROD_SFDX_URL.txt -a devhub -d
          rm -f ./PROD_SFDX_URL.txt
      # Authenticate uat sandbox
      - name: Authenticate uat sandbox
        run: |
          echo ${{ secrets.UAT_SFDX_URL}} > ./UAT_SFDX_URL.txt
          sfdx auth:sfdxurl:store -f ./UAT_SFDX_URL.txt -a uat -s
          rm -f ./UAT_SFDX_URL.txt
      # Install sfpowerkit plugin used to install multiple packages only by version number
      - name: Install sfpowerkit plugin
        run: echo y | sfdx plugins:install sfpowerkit@2.0.1

      # Get package keys
      - name: Get package keys
        id: install-keys
        run: |
          keys=""
          for p in $(jq '.result | .[].Name' -r <<< "$(sfdx force:package:list --json)"); do
              keys+=$p":${{ secrets.PACKAGE_KEY }} "
          done
          echo "::set-output name=keys::$(echo $keys)"
      # Install packages this repo is dependant on
      - name: Install dependant packages
        run: sfdx sfpowerkit:package:dependencies:install -u uat -r -a -w 60 -k '${{ steps.install-keys.outputs.keys }}'

      # Install new package version into uat sandbox
      - name: Install new package version into uat sandbox
        if: success()
        id: uat-installation
        run: |
          sfdx force:source:deploy -p force-app -u uat -l RunLocalTests
