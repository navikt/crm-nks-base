//
// Generated by JSON2Apex http://json2apex.herokuapp.com/

public class AdGroupResponse {

    public Boolean success;
    public String errorMessage;

    public AdGroupResponse(){
        this.success=false;
        this.errorMessage=null;
    }
	public class Value {
		public String userPrincipalName {get;set;} 
        
		public Value(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					    if (text == 'userPrincipalName') {
							userPrincipalName = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Value consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public List<Value> value {get;set;} 

	public AdGroupResponse(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == '@odata.context') {

					} else if (text == 'value') {
						value = arrayOfValue(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'AdGroupResponse consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	
	public static AdGroupResponse parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new AdGroupResponse(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	
    private static List<Value> arrayOfValue(System.JSONParser p) {
        List<Value> res = new List<Value>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Value(p));
        }
        return res;
    }
}